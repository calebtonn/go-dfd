package dfd

import (
	"fmt"
	"strconv"

	"gonum.org/v1/gonum/graph/simple"
)

const Circle = "circle"
const Diamond = "diamond"
const Cylinder = "cylinder"

type DfdNode interface {
	ExternalID() string
	UpdateName(string)
	DOTID() string
}

// Node circle
type Process struct {
	*dotNode
	Name string
}

// Node diamond
type ExternalService struct {
	*dotNode
	Name string
}

// Node cylinder
type DataStore struct {
	*dotNode
	Name string
}

// DeserializeProcess returns a pointer to a Process with a given id
func DeserializeProcess(id string) *Process {
	xid64 := idToID64(id)
	n := &Process{dotNode: &dotNode{Node: simple.Node(xid64)}}
	n.SetDOTID(id)
	n.Shape = Circle
	return n
}

// NewProcess returns a pointer to a Process with the given name and an autogenerated id
func NewProcess(name string) *Process {
	xid := genID()
	xid64 := idToID64(xid)
	p := &Process{Name: name, dotNode: &dotNode{Node: simple.Node(xid64)}}
	p.SetDOTID(xid)
	p.Label = strconv.Quote(name)
	p.Shape = Circle
	p.Name = name
	return p
}

func NewExternalService(name string) *ExternalService {
	xid := genID()
	xid64 := idToID64(xid)
	es := &ExternalService{Name: name, dotNode: &dotNode{Node: simple.Node(xid64)}}
	es.SetDOTID(xid)
	es.Label = strconv.Quote(name)
	es.Shape = Diamond
	es.Name = name
	return es
}

func DeserializeExternalService(id string) *ExternalService {
	xid64 := idToID64(id)
	n := &ExternalService{dotNode: &dotNode{Node: simple.Node(xid64)}}
	n.SetDOTID(id)
	n.Shape = Diamond
	return n
}

func NewDataStore(name string) *DataStore {
	xid := genID()
	xid64 := idToID64(xid)
	ds := &DataStore{Name: name, dotNode: &dotNode{Node: simple.Node(xid64)}}
	ds.SetDOTID(xid)
	ds.Label = strconv.Quote(name)
	ds.Shape = Cylinder
	ds.Name = name
	return ds
}

func DeserializeDataStore(id string) *DataStore {
	xid64 := idToID64(id)
	n := &DataStore{dotNode: &dotNode{Node: simple.Node(xid64)}}
	n.SetDOTID(id)
	n.Shape = Cylinder
	return n
}

func (p *Process) DOTID() string {
	return fmt.Sprintf("process_%s", p.dotID)
}

func (p *Process) ExternalID() string {
	return p.dotID
}

func (n *Process) UpdateName(new_name string) {
	n.Name = new_name
	n.Label = strconv.Quote(new_name)
	return
}

func (es *ExternalService) DOTID() string {
	return fmt.Sprintf("externalservice_%s", es.dotID)
}

func (n *ExternalService) UpdateName(new_name string) {
	n.Name = new_name
	n.Label = strconv.Quote(new_name)
	return
}

func (n *DataStore) UpdateName(new_name string) {
	n.Name = new_name
	n.Label = strconv.Quote(new_name)
	return
}

func (n *DataStore) ExternalID() string {
	return n.dotID
}

func (n *DataStore) DOTID() string {
	return fmt.Sprintf("datastore_%s", n.dotID)
}
